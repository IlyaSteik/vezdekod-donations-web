{"ast":null,"code":"export function shortIntegers(int) {\n  try {\n    return int.toString().replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ');\n  } catch (e) {\n    return 0;\n  }\n}\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexport function formatIntegers(num, digits) {\n  let si = [{\n    value: 1,\n    symbol: \"\"\n  }, {\n    value: 1E3,\n    symbol: \"k\"\n  }, {\n    value: 1E6,\n    symbol: \"M\"\n  }, {\n    value: 1E9,\n    symbol: \"G\"\n  }, {\n    value: 1E12,\n    symbol: \"T\"\n  }, {\n    value: 1E15,\n    symbol: \"P\"\n  }, {\n    value: 1E18,\n    symbol: \"E\"\n  }];\n  let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let i;\n\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n\n  return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n}","map":{"version":3,"sources":["C:/Users/Admin/NodeProjects/VezdekodDonations/src/Utils.js"],"names":["shortIntegers","int","toString","replace","e","getRandomInt","min","max","Math","floor","random","formatIntegers","num","digits","si","value","symbol","rx","i","length","toFixed"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI;AACA,WAAOA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,6BAAvB,EAAsD,KAAtD,CAAP;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAO,CAAP;AACH;AACJ;AAED,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AACnC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;AAED,OAAO,SAASK,cAAT,CAAwBC,GAAxB,EAA6BC,MAA7B,EAAqC;AACxC,MAAIC,EAAE,GAAG,CACL;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GADK,EAEL;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAFK,EAGL;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAHK,EAIL;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAJK,EAKL;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GALK,EAML;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GANK,EAOL;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAPK,CAAT;AASA,MAAIC,EAAE,GAAG,0BAAT;AACA,MAAIC,CAAJ;;AACA,OAAKA,CAAC,GAAGJ,EAAE,CAACK,MAAH,GAAY,CAArB,EAAwBD,CAAC,GAAG,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAChC,QAAIN,GAAG,IAAIE,EAAE,CAACI,CAAD,CAAF,CAAMH,KAAjB,EAAwB;AACpB;AACH;AACJ;;AACD,SAAO,CAACH,GAAG,GAAGE,EAAE,CAACI,CAAD,CAAF,CAAMH,KAAb,EAAoBK,OAApB,CAA4BP,MAA5B,EAAoCV,OAApC,CAA4Cc,EAA5C,EAAgD,IAAhD,IAAwDH,EAAE,CAACI,CAAD,CAAF,CAAMF,MAArE;AACH","sourcesContent":["export function shortIntegers(int) {\r\n    try {\r\n        return int.toString().replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '$1 ');\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function formatIntegers(num, digits) {\r\n    let si = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1E3, symbol: \"k\" },\r\n        { value: 1E6, symbol: \"M\" },\r\n        { value: 1E9, symbol: \"G\" },\r\n        { value: 1E12, symbol: \"T\" },\r\n        { value: 1E15, symbol: \"P\" },\r\n        { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    let i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n        if (num >= si[i].value) {\r\n            break;\r\n        }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n}"]},"metadata":{},"sourceType":"module"}